// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`demos [
  '(one / two) / "three / four" / <<five / six>>',
  '/',
  { brackets: '(), << >>' }
] 1`] = `
[
  "(one / two)",
  ""three / four"",
  "<<five / six>>",
]
`;

exports[`demos [
  '(one / two) / "three / four" / <<five / six>>',
  '/',
  { brackets: [ [Array], [Array] ] }
] 1`] = `
[
  "(one / two)",
  ""three / four"",
  "<<five / six>>",
]
`;

exports[`demos [
  '(one / two) / "three / four" / <<five / six>>',
  '/',
  { brackets: { '(': ')', '<<': '>>' } }
] 1`] = `
[
  "(one / two)",
  ""three / four"",
  "<<five / six>>",
]
`;

exports[`demos [
  'Peter loves Mary and Mary loves Johnny and Jonny loves Steve',
  'AND',
  { mentions: [ 'STEVE', 'PETER' ] }
] 1`] = `
[
  {
    "mentions": [
      "PETER",
    ],
    "text": "Peter loves Mary",
  },
  {
    "text": "Mary loves Johnny",
  },
  {
    "mentions": [
      "STEVE",
    ],
    "text": "Jonny loves Steve",
  },
]
`;

exports[`demos [
  'SELECT best FROM life',
  [ 'SELECT ', 'FROM ' ],
  { includeSeparatorMode: 'ONLY' }
] 1`] = `
[
  "SELECT ",
  "FROM ",
]
`;

exports[`demos [
  'SELECT best FROM life',
  [ 'SELECT ', 'FROM ' ],
  { includeSeparatorMode: 'RIGHT' }
] 1`] = `
[
  [
    "SELECT ",
    "best",
  ],
  [
    "FROM ",
    "life",
  ],
]
`;

exports[`demos [
  'SELECT best FROM life',
  [ 'SELECT ', 'FROM ' ],
  { includeSeparatorMode: 'SEPARATELY' }
] 1`] = `
[
  "",
  "SELECT ",
  "best",
  "FROM ",
  "life",
]
`;

exports[`demos [
  'select best FROM life',
  [ 'SELECT ', 'FROM ' ],
  { includeSeparatorMode: 'RIGHT' }
] 1`] = `
[
  [
    "SELECT ",
    "best",
  ],
  [
    "FROM ",
    "life",
  ],
]
`;

exports[`demos [
  'select best FROM life',
  [ 'SELECT ', 'FROM ' ],
  { includeSeparatorMode: 'RIGHT', ignoreCase: false }
] 1`] = `
[
  [
    undefined,
    "select best",
  ],
  [
    "FROM ",
    "life",
  ],
]
`;

exports[`demos [
  {
    brackets: [],
    mentions: [],
    ignoreInsideQuotes: true,
    includeSeparatorMode: 'NONE',
    ignoreCase: true,
    trimResult: true,
    trimSeparators: false,
    defaultBrackets: [ [Array], [Array], [Array] ]
  }
] 1`] = `[Function]`;

exports[`demos [ 'One | Two | Three | Four', '|', { indexes: [ 1, 3 ] } ] 1`] = `
[
  "Two",
  "Four",
]
`;

exports[`demos [ 'One | Two | Three | Four', '|', { indexes: 2 } ] 1`] = `"Three"`;

exports[`demos [ 'SELECT best FROM life', [ 'SELECT ', 'FROM ' ] ] 1`] = `
[
  "",
  "best",
  "life",
]
`;

exports[`demos [ 'one , two , "three , four" , five , six' ] 1`] = `
[
  "one",
  "two",
  ""three , four"",
  "five",
  "six",
]
`;

exports[`demos [ 'one _ two _ "three _ four" _ five _ six', '_' ] 1`] = `
[
  "one",
  "two",
  ""three _ four"",
  "five",
  "six",
]
`;

exports[`demos [ 'one _ two _ "three _ four" _ five _ six', '_', { brackets: true } ] 1`] = `
[
  "one",
  "two",
  ""three _ four"",
  "five",
  "six",
]
`;

exports[`demos [ 'p1: point first p2: point second', /p\\d:/gi ] 1`] = `
[
  "",
  "point first",
  "point second",
]
`;

exports[`demos [ [ 'SELECT ', 'FROM ' ] ] 1`] = `[Function]`;

exports[`demos [ { includeSeparatorMode: 'RIGHT', ignoreCase: false } ] 1`] = `[Function]`;

exports[`demos [ {} ] 1`] = `[Function]`;
